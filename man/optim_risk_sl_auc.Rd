% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sl_fn.R
\name{optim_risk_sl_auc}
\alias{optim_risk_sl_auc}
\title{Cross-validated area under receiver operating characteristic curve (AUC)}
\usage{
optim_risk_sl_auc(sl_weight, input, sl_control)
}
\arguments{
\item{sl_weight}{A numeric vector of super learner weights corresponding to each
\code{learner}. Typically, this is what is maximized over in \code{sl_control$weight_fn}.}

\item{input}{A list where each entry corresponds to a validation fold. Each entry is a list
with entries: Y (univariate outcome for this validation fold), pred (matrix of predictions
from \code{learner} and columns correspond to different \code{leaner}s).}

\item{sl_control}{Super learner control options.}
}
\value{
Numeric value of cross-validated AUC.
}
\description{
In general, the function passed to \code{sl_control$optim_risk} should expect a named list
of outcomes (Y) and predictions (pred) in validation folds and should return a criteria by
which super learner weights may be optimized. The weights are input to the function via
\code{sl_weight} and are optimized in the \code{sl_control$weight_fn}. See
Examples section below for an example of the format of the \code{input} list used
for \code{sl_control$optim_risk} functions.
}
\details{
In this case, the function computes cross-validated area under the receiver operating
characteristics curve (AUC) using \code{cvAUC}. 
scaled to be between 0 and 1. The option \code{trim} must be a value greater than
zero in order that the loss is bounded. The bounds on the outcome are set via
\code{l} and \code{u}.
}
\examples{

#Simulate data with proper format:
#Y is one component of the multivariate outcome, pred is the predictions made by 2 learners
input <- list(Y = rbinom(50, 1, 0.5), pred = cbind(runif(50,0,1), runif(50,0,1)))

#Example weights:
sl_weight <- c(0.5, 0.5)

#Linear ensemble:
sl_control <- list(ensemble_fn = "ensemble_linear")

#Risk: 
risk <- optim_risk_sl_auc(sl_weight, input, sl_control)

}
