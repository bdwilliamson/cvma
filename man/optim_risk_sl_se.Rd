% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sl_fn.R
\name{optim_risk_sl_se}
\alias{optim_risk_sl_se}
\title{Cross-validated mean squared-error for computing super learner}
\usage{
optim_risk_sl_se(sl_weight, input, sl_control)
}
\arguments{
\item{sl_weight}{A numeric vector of super learner weights corresponding to each
\code{learner}. Typically, this is what is maximized over in \code{sl_control$weight_fn}.}

\item{input}{A list where each entry corresponds to a validation fold. Each entry is a list
with entries: Y (univariate outcome for this validation fold), pred (matrix of predictions
from \code{learner} and columns correspond to different \code{leaner}s).}

\item{sl_control}{Super learner control options.}
}
\value{
Numeric value of cross-validated mean squared-error
}
\description{
In general, the function passed to \code{sl_control$optim_risk} should expect a named list
of outcomes (Y) and predictions (pred) in validation folds and should return a criteria by
which super learner weights may be optimized. The weights are input to the function via
\code{sl_weight} and are optimized in the \code{sl_control$weight_fn}. See
Examples section below for an example of the format of the \code{input} list used
for \code{sl_control$optim_risk} functions.
}
\details{
In this case, the function computes cross-validated mean squared-error.
}
\examples{

# simulate data with proper format
# Y is one component of the multivariate outcome
# pred is the predictions made by learners 
input <- list(Y = rnorm(50), pred = cbind(rnorm(50), rnorm(50)))

# made up weights
sl_weight <- c(0.5, 0.5)

# linear ensemble
sl_control <- list(ensemble_fn = "ensemble_linear")

# get risk 
risk <- optim_risk_sl_se(sl_weight, input, sl_control)
}
