% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/y_fn.R
\name{optim_risk_y_r2}
\alias{optim_risk_y_r2}
\title{Cross-validated non-parametric R-squared for computing composite outcome weights}
\usage{
optim_risk_y_r2(y_weight, input, y_weight_control)
}
\arguments{
\item{y_weight}{A numeric vector of weights corresponding to each
outcome. Typically, this is what is maximized over in \code{y_weight_control$weight_fn}.}

\item{input}{A list with named entries Y (matrix of outcomes for this validation fold) and 
pred (matrix of super learner predictions for each outcomes with columns corresponding to 
different outcomes).}

\item{y_weight_control}{Composite outcome weight control options.}
}
\value{
Numeric value of cross-validated R-squared
}
\description{
In general, the function passed to \code{y_weight_control$optim_risk} should expect a named list
of outcomes (Y) and predictions (pred) in validation folds and should return a criteria by
which outcome weights may be optimized. The weights are input to the function via
\code{y_weight} and are optimized in the \code{y_weight_control$weight_fn}. See
Examples section below for an example of the format of the \code{input} list used
for \code{y_weight_control$optim_risk} functions. 
 
In this case, the function computes cross-validated nonparametric R-squared.
}
\examples{

# simulate data with proper format
input <- list(list(Y = cbind(rnorm(50), rnorm(50)), 
                   pred = cbind(rnorm(50), rnorm(50))))

# made up weights
y_weight <- c(0.5, 0.5)

# linear combination of outcomes
y_weight_control <- list(ensemble_fn = "ensemble_linear")

# get risk 
risk <- optim_risk_y_r2(y_weight, input, y_weight_control)
}
